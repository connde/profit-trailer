---
# Source: profit-trailer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: binance-btc-test-001-service
  namespace: profit-trailer
  labels:
    app: profit-trailer
    exchange: binance
    market: btc
    environment: test
    botId: "001"
spec:
  type: ClusterIP
  ports:
  - name: profit-trailer-http
    port: 8081
    targetPort: 8081
  selector:
    app: profit-trailer
    exchange: binance
    market: btc
    environment: test
    botId: "001"
---
# Source: profit-trailer/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: binance-btc-test-001-workload
  namespace: profit-trailer
spec:
  serviceName: "profit-trailer"
  replicas: 1
  selector:
    matchLabels:
      app: profit-trailer
      exchange: binance
      market: btc
      environment: test
      botId: "001"   
  template:
    metadata:
      labels:
        app: profit-trailer
        exchange: binance
        market: btc
        environment: test
        botId: "001"
        use-http01-solver: "true"   
    spec:
      containers:
      - name: profit-trailer
        image: lucasconde/profit-trailer:2.5.0
        resources:
          requests:
            memory: 256Mi 
            cpu: 200m
          limits:
            memory: 1024Mi
            cpu: 700m 
        ports:
        - containerPort: 80
          name: pt-port
        volumeMounts:
        - name: data
          mountPath: /app/ProfitTrailer/data
        - name: log
          mountPath: /app/ProfitTrailer/logs
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: 
      - "ReadWriteOnce"
      storageClassName: longhorn-pt 
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: log
    spec:
      accessModes: 
      - "ReadWriteOnce"
      storageClassName: longhorn 
      resources:
        requests:
          storage: 2Gi
---
# Source: profit-trailer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: nginx
  name: binance-btc-test-001-ingress
  namespace: profit-trailer
  labels:
    app: profit-trailer
    exchange: binance
    market: btc
    environment: test
    botId: "001"
    use-http01-solver: "true"       
spec:
  rules:
  - host: profit-trailer.domain.com
    http:
      paths:
      - backend:
          service:
            name: binance-btc-test-001-service
            port:
              number: 8081
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
      - profit-trailer.domain.com
    secretName: tls-binance-btc-test-001-staging
status:
  loadBalancer:
    ingress: 
    - ip: 127.0.0.1
---
# Source: profit-trailer/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pt-certificate-binance-btc-test-001-staging
  namespace: profit-trailer
spec:
  secretName: tls-binance-btc-test-001-staging
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-staging
  commonName: profit-trailer.domain.com
  dnsNames:
  - profit-trailer.domain.com