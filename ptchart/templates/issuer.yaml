{{- if eq .Values.certificate.issuer "Issuer" }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: pt-certificate-{{ .Values.exchange }}-{{ .Values.market }}-{{ .Values.environment }}-{{ .Values.botId }}-{{ .Values.certificate.env }}
  namespace: {{ .Release.Namespace }}
spec:
  acme:
    # The ACME server URL
    {{- if eq .Values.certificate.env "staging" }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    {{- else if eq .Values.certificate.env "production" }}
    server: https://acme-v02.api.letsencrypt.org/directory
    {{- end }}
    # Email address used for ACME registration
    email: {{ .Values.certificate.email }} 
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: pt-certificate-{{ .Values.exchange }}-{{ .Values.market }}-{{ .Values.environment }}-{{ .Values.botId }}-{{ .Values.certificate.env }}
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress: 
          class: {{ .Values.ingress.class }}          
{{- else if eq .Values.certificate.issuer "ClusterIssuer"}}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-{{ .Values.certificate.env }}
spec:
  acme:
    # The ACME server URL
    {{- if eq .Values.certificate.env "staging" }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    {{- else if eq .Values.certificate.env "production" }}
    server: https://acme-v02.api.letsencrypt.org/directory
    {{- end }}
    preferredChain: "ISRG Root X1"
    # Email address used for ACME registration
    email: {{ .Values.certificate.email }} 
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-{{ .Values.certificate.env }}-account-key
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress: 
          class: {{ .Values.ingress.class }}
      selector:
        matchLabels:
          use-http01-solver: "true"          
{{- end }}   